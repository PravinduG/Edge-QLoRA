// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module mmult_accel_mmult_accel_Pipeline_loadB_VITIS_LOOP_269_7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        localB_15,
        localB_14,
        localB_13,
        localB_12,
        localB_11,
        localB_10,
        localB_9,
        localB_8,
        localB_7,
        localB_6,
        localB_5,
        localB_4,
        localB_3,
        localB_2,
        localB_1,
        localB,
        k0,
        K,
        j0,
        B_bram_address0,
        B_bram_ce0,
        B_bram_q0,
        current_block_M,
        localB_31_out,
        localB_31_out_ap_vld,
        localB_30_out,
        localB_30_out_ap_vld,
        localB_29_out,
        localB_29_out_ap_vld,
        localB_28_out,
        localB_28_out_ap_vld,
        localB_27_out,
        localB_27_out_ap_vld,
        localB_26_out,
        localB_26_out_ap_vld,
        localB_25_out,
        localB_25_out_ap_vld,
        localB_24_out,
        localB_24_out_ap_vld,
        localB_23_out,
        localB_23_out_ap_vld,
        localB_22_out,
        localB_22_out_ap_vld,
        localB_21_out,
        localB_21_out_ap_vld,
        localB_20_out,
        localB_20_out_ap_vld,
        localB_19_out,
        localB_19_out_ap_vld,
        localB_18_out,
        localB_18_out_ap_vld,
        localB_17_out,
        localB_17_out_ap_vld,
        localB_16_out,
        localB_16_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] localB_15;
input  [63:0] localB_14;
input  [63:0] localB_13;
input  [63:0] localB_12;
input  [63:0] localB_11;
input  [63:0] localB_10;
input  [63:0] localB_9;
input  [63:0] localB_8;
input  [63:0] localB_7;
input  [63:0] localB_6;
input  [63:0] localB_5;
input  [63:0] localB_4;
input  [63:0] localB_3;
input  [63:0] localB_2;
input  [63:0] localB_1;
input  [63:0] localB;
input  [30:0] k0;
input  [31:0] K;
input  [30:0] j0;
output  [14:0] B_bram_address0;
output   B_bram_ce0;
input  [7:0] B_bram_q0;
input  [31:0] current_block_M;
output  [63:0] localB_31_out;
output   localB_31_out_ap_vld;
output  [63:0] localB_30_out;
output   localB_30_out_ap_vld;
output  [63:0] localB_29_out;
output   localB_29_out_ap_vld;
output  [63:0] localB_28_out;
output   localB_28_out_ap_vld;
output  [63:0] localB_27_out;
output   localB_27_out_ap_vld;
output  [63:0] localB_26_out;
output   localB_26_out_ap_vld;
output  [63:0] localB_25_out;
output   localB_25_out_ap_vld;
output  [63:0] localB_24_out;
output   localB_24_out_ap_vld;
output  [63:0] localB_23_out;
output   localB_23_out_ap_vld;
output  [63:0] localB_22_out;
output   localB_22_out_ap_vld;
output  [63:0] localB_21_out;
output   localB_21_out_ap_vld;
output  [63:0] localB_20_out;
output   localB_20_out_ap_vld;
output  [63:0] localB_19_out;
output   localB_19_out_ap_vld;
output  [63:0] localB_18_out;
output   localB_18_out_ap_vld;
output  [63:0] localB_17_out;
output   localB_17_out_ap_vld;
output  [63:0] localB_16_out;
output   localB_16_out_ap_vld;

reg ap_idle;
reg localB_31_out_ap_vld;
reg localB_30_out_ap_vld;
reg localB_29_out_ap_vld;
reg localB_28_out_ap_vld;
reg localB_27_out_ap_vld;
reg localB_26_out_ap_vld;
reg localB_25_out_ap_vld;
reg localB_24_out_ap_vld;
reg localB_23_out_ap_vld;
reg localB_22_out_ap_vld;
reg localB_21_out_ap_vld;
reg localB_20_out_ap_vld;
reg localB_19_out_ap_vld;
reg localB_18_out_ap_vld;
reg localB_17_out_ap_vld;
reg localB_16_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln268_fu_568_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] j0_cast_fu_462_p1;
reg   [31:0] j0_cast_reg_991;
wire   [31:0] k0_cast_fu_466_p1;
reg   [31:0] k0_cast_reg_996;
reg   [0:0] icmp_ln268_reg_1001;
reg   [0:0] icmp_ln268_reg_1001_pp0_iter1_reg;
reg   [0:0] icmp_ln268_reg_1001_pp0_iter2_reg;
wire   [1:0] trunc_ln268_fu_623_p1;
reg   [1:0] trunc_ln268_reg_1005;
reg   [1:0] trunc_ln268_reg_1005_pp0_iter2_reg;
reg   [1:0] trunc_ln268_reg_1005_pp0_iter3_reg;
wire   [31:0] empty_fu_627_p2;
reg   [31:0] empty_reg_1009;
wire   [9:0] trunc_ln275_fu_632_p1;
reg   [9:0] trunc_ln275_reg_1014;
wire   [1:0] trunc_ln269_fu_640_p1;
reg   [1:0] trunc_ln269_reg_1019;
reg   [1:0] trunc_ln269_reg_1019_pp0_iter2_reg;
reg   [1:0] trunc_ln269_reg_1019_pp0_iter3_reg;
wire   [31:0] add_ln272_fu_644_p2;
reg   [31:0] add_ln272_reg_1023;
wire   [14:0] trunc_ln275_1_fu_649_p1;
reg   [14:0] trunc_ln275_1_reg_1028;
wire   [0:0] and_ln274_fu_694_p2;
reg   [0:0] and_ln274_reg_1038;
wire   [7:0] ap_phi_reg_pp0_iter0_localB_32_reg_451;
reg   [7:0] ap_phi_reg_pp0_iter1_localB_32_reg_451;
reg   [7:0] ap_phi_reg_pp0_iter2_localB_32_reg_451;
reg   [7:0] ap_phi_reg_pp0_iter3_localB_32_reg_451;
reg   [7:0] ap_phi_reg_pp0_iter4_localB_32_reg_451;
wire   [63:0] zext_ln275_fu_685_p1;
wire    ap_block_pp0_stage0;
reg   [2:0] jj_fu_130;
wire   [2:0] add_ln269_fu_653_p2;
wire    ap_loop_init;
reg   [2:0] kk_fu_134;
wire   [2:0] select_ln268_fu_611_p3;
reg   [4:0] indvar_flatten26_fu_138;
wire   [4:0] add_ln268_1_fu_574_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten26_load;
reg   [63:0] localB_16_fu_142;
wire  signed [63:0] localB_48_cast_fu_700_p1;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [63:0] localB_17_fu_146;
reg   [63:0] localB_18_fu_150;
reg   [63:0] localB_19_fu_154;
reg   [63:0] localB_20_fu_158;
reg   [63:0] localB_21_fu_162;
reg   [63:0] localB_22_fu_166;
reg   [63:0] localB_23_fu_170;
reg   [63:0] localB_24_fu_174;
reg   [63:0] localB_25_fu_178;
reg   [63:0] localB_26_fu_182;
reg   [63:0] localB_27_fu_186;
reg   [63:0] localB_28_fu_190;
reg   [63:0] localB_29_fu_194;
reg   [63:0] localB_30_fu_198;
reg   [63:0] localB_31_fu_202;
wire    ap_block_pp0_stage0_01001;
reg    B_bram_ce0_local;
wire   [0:0] icmp_ln269_fu_597_p2;
wire   [2:0] add_ln268_fu_591_p2;
wire   [31:0] zext_ln268_fu_619_p1;
wire   [2:0] select_ln214_fu_603_p3;
wire   [31:0] zext_ln269_fu_636_p1;
wire   [14:0] tmp_6_fu_669_p3;
wire   [14:0] add_ln275_fu_680_p2;
wire   [0:0] cmp168_fu_676_p2;
wire   [0:0] icmp_ln274_fu_690_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_563;
reg    ap_condition_567;
reg    ap_condition_571;
reg    ap_condition_575;
reg    ap_condition_578;
reg    ap_condition_581;
reg    ap_condition_584;
reg    ap_condition_587;
reg    ap_condition_590;
reg    ap_condition_593;
reg    ap_condition_596;
reg    ap_condition_599;
reg    ap_condition_602;
reg    ap_condition_605;
reg    ap_condition_608;
reg    ap_condition_611;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 jj_fu_130 = 3'd0;
#0 kk_fu_134 = 3'd0;
#0 indvar_flatten26_fu_138 = 5'd0;
#0 localB_16_fu_142 = 64'd0;
#0 localB_17_fu_146 = 64'd0;
#0 localB_18_fu_150 = 64'd0;
#0 localB_19_fu_154 = 64'd0;
#0 localB_20_fu_158 = 64'd0;
#0 localB_21_fu_162 = 64'd0;
#0 localB_22_fu_166 = 64'd0;
#0 localB_23_fu_170 = 64'd0;
#0 localB_24_fu_174 = 64'd0;
#0 localB_25_fu_178 = 64'd0;
#0 localB_26_fu_182 = 64'd0;
#0 localB_27_fu_186 = 64'd0;
#0 localB_28_fu_190 = 64'd0;
#0 localB_29_fu_194 = 64'd0;
#0 localB_30_fu_198 = 64'd0;
#0 localB_31_fu_202 = 64'd0;
#0 ap_done_reg = 1'b0;
end

mmult_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((1'd0 == and_ln274_fu_694_p2) & (icmp_ln268_reg_1001_pp0_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter3_localB_32_reg_451 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_localB_32_reg_451 <= ap_phi_reg_pp0_iter2_localB_32_reg_451;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((1'd1 == and_ln274_reg_1038) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_localB_32_reg_451 <= B_bram_q0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_localB_32_reg_451 <= ap_phi_reg_pp0_iter3_localB_32_reg_451;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln268_fu_568_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten26_fu_138 <= add_ln268_1_fu_574_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten26_fu_138 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            jj_fu_130 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            jj_fu_130 <= add_ln269_fu_653_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            kk_fu_134 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            kk_fu_134 <= select_ln268_fu_611_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_16_fu_142 <= localB;
        end else if ((1'b1 == ap_condition_563)) begin
            localB_16_fu_142 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_17_fu_146 <= localB_1;
        end else if ((1'b1 == ap_condition_567)) begin
            localB_17_fu_146 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_18_fu_150 <= localB_2;
        end else if ((1'b1 == ap_condition_571)) begin
            localB_18_fu_150 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_19_fu_154 <= localB_3;
        end else if ((1'b1 == ap_condition_575)) begin
            localB_19_fu_154 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_20_fu_158 <= localB_4;
        end else if ((1'b1 == ap_condition_578)) begin
            localB_20_fu_158 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_21_fu_162 <= localB_5;
        end else if ((1'b1 == ap_condition_581)) begin
            localB_21_fu_162 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_22_fu_166 <= localB_6;
        end else if ((1'b1 == ap_condition_584)) begin
            localB_22_fu_166 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_23_fu_170 <= localB_7;
        end else if ((1'b1 == ap_condition_587)) begin
            localB_23_fu_170 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_24_fu_174 <= localB_8;
        end else if ((1'b1 == ap_condition_590)) begin
            localB_24_fu_174 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_25_fu_178 <= localB_9;
        end else if ((1'b1 == ap_condition_593)) begin
            localB_25_fu_178 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_26_fu_182 <= localB_10;
        end else if ((1'b1 == ap_condition_596)) begin
            localB_26_fu_182 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_27_fu_186 <= localB_11;
        end else if ((1'b1 == ap_condition_599)) begin
            localB_27_fu_186 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_28_fu_190 <= localB_12;
        end else if ((1'b1 == ap_condition_602)) begin
            localB_28_fu_190 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_29_fu_194 <= localB_13;
        end else if ((1'b1 == ap_condition_605)) begin
            localB_29_fu_194 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_30_fu_198 <= localB_14;
        end else if ((1'b1 == ap_condition_608)) begin
            localB_30_fu_198 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            localB_31_fu_202 <= localB_15;
        end else if ((1'b1 == ap_condition_611)) begin
            localB_31_fu_202 <= localB_48_cast_fu_700_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln272_reg_1023 <= add_ln272_fu_644_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_reg_1009 <= empty_fu_627_p2;
        icmp_ln268_reg_1001 <= icmp_ln268_fu_568_p2;
        icmp_ln268_reg_1001_pp0_iter1_reg <= icmp_ln268_reg_1001;
        j0_cast_reg_991[30 : 0] <= j0_cast_fu_462_p1[30 : 0];
        k0_cast_reg_996[30 : 0] <= k0_cast_fu_466_p1[30 : 0];
        trunc_ln268_reg_1005 <= trunc_ln268_fu_623_p1;
        trunc_ln269_reg_1019 <= trunc_ln269_fu_640_p1;
        trunc_ln275_1_reg_1028 <= trunc_ln275_1_fu_649_p1;
        trunc_ln275_reg_1014 <= trunc_ln275_fu_632_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln274_reg_1038 <= and_ln274_fu_694_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln268_reg_1001_pp0_iter2_reg <= icmp_ln268_reg_1001_pp0_iter1_reg;
        trunc_ln268_reg_1005_pp0_iter2_reg <= trunc_ln268_reg_1005;
        trunc_ln268_reg_1005_pp0_iter3_reg <= trunc_ln268_reg_1005_pp0_iter2_reg;
        trunc_ln269_reg_1019_pp0_iter2_reg <= trunc_ln269_reg_1019;
        trunc_ln269_reg_1019_pp0_iter3_reg <= trunc_ln269_reg_1019_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_localB_32_reg_451 <= ap_phi_reg_pp0_iter0_localB_32_reg_451;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_localB_32_reg_451 <= ap_phi_reg_pp0_iter1_localB_32_reg_451;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        B_bram_ce0_local = 1'b1;
    end else begin
        B_bram_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln268_fu_568_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten26_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten26_load = indvar_flatten26_fu_138;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_16_out_ap_vld = 1'b1;
    end else begin
        localB_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_17_out_ap_vld = 1'b1;
    end else begin
        localB_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_18_out_ap_vld = 1'b1;
    end else begin
        localB_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_19_out_ap_vld = 1'b1;
    end else begin
        localB_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_20_out_ap_vld = 1'b1;
    end else begin
        localB_20_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_21_out_ap_vld = 1'b1;
    end else begin
        localB_21_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_22_out_ap_vld = 1'b1;
    end else begin
        localB_22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_23_out_ap_vld = 1'b1;
    end else begin
        localB_23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_24_out_ap_vld = 1'b1;
    end else begin
        localB_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_25_out_ap_vld = 1'b1;
    end else begin
        localB_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_26_out_ap_vld = 1'b1;
    end else begin
        localB_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_27_out_ap_vld = 1'b1;
    end else begin
        localB_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_28_out_ap_vld = 1'b1;
    end else begin
        localB_28_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_29_out_ap_vld = 1'b1;
    end else begin
        localB_29_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_30_out_ap_vld = 1'b1;
    end else begin
        localB_30_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (icmp_ln268_reg_1001_pp0_iter2_reg == 1'd1))) begin
        localB_31_out_ap_vld = 1'b1;
    end else begin
        localB_31_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_bram_address0 = zext_ln275_fu_685_p1;

assign B_bram_ce0 = B_bram_ce0_local;

assign add_ln268_1_fu_574_p2 = (ap_sig_allocacmp_indvar_flatten26_load + 5'd1);

assign add_ln268_fu_591_p2 = (kk_fu_134 + 3'd1);

assign add_ln269_fu_653_p2 = (select_ln214_fu_603_p3 + 3'd1);

assign add_ln272_fu_644_p2 = (zext_ln269_fu_636_p1 + j0_cast_reg_991);

assign add_ln275_fu_680_p2 = (tmp_6_fu_669_p3 + trunc_ln275_1_reg_1028);

assign and_ln274_fu_694_p2 = (icmp_ln274_fu_690_p2 & cmp168_fu_676_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_563 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd0) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd0));
end

always @ (*) begin
    ap_condition_567 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd1) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd0));
end

always @ (*) begin
    ap_condition_571 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd2) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd0));
end

always @ (*) begin
    ap_condition_575 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd3) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd0));
end

always @ (*) begin
    ap_condition_578 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd0) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd1));
end

always @ (*) begin
    ap_condition_581 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd1) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd1));
end

always @ (*) begin
    ap_condition_584 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd2) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd1));
end

always @ (*) begin
    ap_condition_587 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd3) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd1));
end

always @ (*) begin
    ap_condition_590 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd0) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd2));
end

always @ (*) begin
    ap_condition_593 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd1) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd2));
end

always @ (*) begin
    ap_condition_596 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd2) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd2));
end

always @ (*) begin
    ap_condition_599 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd3) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd2));
end

always @ (*) begin
    ap_condition_602 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd0) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd3));
end

always @ (*) begin
    ap_condition_605 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd1) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd3));
end

always @ (*) begin
    ap_condition_608 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd2) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd3));
end

always @ (*) begin
    ap_condition_611 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln269_reg_1019_pp0_iter3_reg == 2'd3) & (trunc_ln268_reg_1005_pp0_iter3_reg == 2'd3));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_localB_32_reg_451 = 'bx;

assign ap_ready = ap_ready_sig;

assign cmp168_fu_676_p2 = (($signed(empty_reg_1009) < $signed(K)) ? 1'b1 : 1'b0);

assign empty_fu_627_p2 = (zext_ln268_fu_619_p1 + k0_cast_reg_996);

assign icmp_ln268_fu_568_p2 = ((ap_sig_allocacmp_indvar_flatten26_load == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln269_fu_597_p2 = ((jj_fu_130 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln274_fu_690_p2 = (($signed(add_ln272_reg_1023) < $signed(current_block_M)) ? 1'b1 : 1'b0);

assign j0_cast_fu_462_p1 = j0;

assign k0_cast_fu_466_p1 = k0;

assign localB_16_out = localB_16_fu_142;

assign localB_17_out = localB_17_fu_146;

assign localB_18_out = localB_18_fu_150;

assign localB_19_out = localB_19_fu_154;

assign localB_20_out = localB_20_fu_158;

assign localB_21_out = localB_21_fu_162;

assign localB_22_out = localB_22_fu_166;

assign localB_23_out = localB_23_fu_170;

assign localB_24_out = localB_24_fu_174;

assign localB_25_out = localB_25_fu_178;

assign localB_26_out = localB_26_fu_182;

assign localB_27_out = localB_27_fu_186;

assign localB_28_out = localB_28_fu_190;

assign localB_29_out = localB_29_fu_194;

assign localB_30_out = localB_30_fu_198;

assign localB_31_out = localB_31_fu_202;

assign localB_48_cast_fu_700_p1 = $signed(ap_phi_reg_pp0_iter4_localB_32_reg_451);

assign select_ln214_fu_603_p3 = ((icmp_ln269_fu_597_p2[0:0] == 1'b1) ? 3'd0 : jj_fu_130);

assign select_ln268_fu_611_p3 = ((icmp_ln269_fu_597_p2[0:0] == 1'b1) ? add_ln268_fu_591_p2 : kk_fu_134);

assign tmp_6_fu_669_p3 = {{trunc_ln275_reg_1014}, {5'd0}};

assign trunc_ln268_fu_623_p1 = select_ln268_fu_611_p3[1:0];

assign trunc_ln269_fu_640_p1 = select_ln214_fu_603_p3[1:0];

assign trunc_ln275_1_fu_649_p1 = add_ln272_fu_644_p2[14:0];

assign trunc_ln275_fu_632_p1 = empty_fu_627_p2[9:0];

assign zext_ln268_fu_619_p1 = select_ln268_fu_611_p3;

assign zext_ln269_fu_636_p1 = select_ln214_fu_603_p3;

assign zext_ln275_fu_685_p1 = add_ln275_fu_680_p2;

always @ (posedge ap_clk) begin
    j0_cast_reg_991[31] <= 1'b0;
    k0_cast_reg_996[31] <= 1'b0;
end

endmodule //mmult_accel_mmult_accel_Pipeline_loadB_VITIS_LOOP_269_7
